{
  "_args": [
    [
      "string_random.js",
      "/home/francois/Documents/LibrarizeMe"
    ]
  ],
  "_from": "string_random.js@latest",
  "_id": "string_random.js@0.0.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/string_random.js",
  "_npmUser": {
    "email": "cho45@lowreal.net",
    "name": "cho45"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "name": "string_random.js",
    "raw": "string_random.js",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/string_random.js/-/string_random.js-0.0.4.tgz",
  "_shasum": "1ac768f6881f3e1dc56e92f0750a0af9935124a9",
  "_shrinkwrap": null,
  "_spec": "string_random.js",
  "_where": "/home/francois/Documents/LibrarizeMe",
  "author": {
    "name": "cho45"
  },
  "dependencies": {},
  "description": "Generating random string from regexp pattern.",
  "devDependencies": {},
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "1ac768f6881f3e1dc56e92f0750a0af9935124a9",
    "tarball": "https://registry.npmjs.org/string_random.js/-/string_random.js-0.0.4.tgz"
  },
  "keywords": [
    "random",
    "regexp",
    "string"
  ],
  "license": "BSD",
  "main": "lib/String_random.js",
  "maintainers": [
    {
      "name": "cho45",
      "email": "cho45@lowreal.net"
    }
  ],
  "name": "string_random.js",
  "optionalDependencies": {},
  "readme": "String_random.js\n==================\n\nhttps://github.com/cho45/String_random.js\n\nString_random.js is for generating random string from regexp pattern.\n\n\nSYNOPSIS\n========\n\n```\nvar randomString = String_random(/\\d\\d\\d/);\nconsole.log(randomString); //=> \"000\", \"010\", \"432\" or etc...\n\n```\n\nSUPPRTED SYNTAXES\n=================\n\n * `*` `+` `?` `{n,n}`: quantifier\n * `.` : generating following: `[a-zA-Z0-9 !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]`\n * `[ .. ]` : character class (also supports range with `-` but does not supports `^`)\n * `( .. )` : simple grouping\n * `|` : alternative\n\nWILL NOT SUPPRT\n===============\n\n * `^` : beginning of line\n * `$` : end of line\n * `\\b` `\\B`\n\n",
  "repository": "",
  "scripts": {
    "test": "node test/test.js"
  },
  "version": "0.0.4"
}
